/*!
 * Vueform Mask Plugin v1.0.5 (https://github.com/vueform/plugin-mask)
 * Copyright (c) 2024-present Adam Berecz <adam@vueform.com>
 * Licensed under the MIT License
 */

import{toRefs as e,computed as a,ref as l,onMounted as u,watch as t,nextTick as s}from"vue";var v=(v={},n=null)=>({apply:["TextElement","PhoneElement"],props:{mask:{required:!1,type:[String,Object,Array,Function]},unmask:{require:!1,type:Boolean,default:!1},allowIncomplete:{require:!1,type:Boolean,default:!1}},setup(o,r,i){const{formatLoad:m,mask:d,inputType:p,unmask:k,allowIncomplete:c,name:f}=e(o),{nullValue:y,value:h,el$:b,path:g,form$:M,defaultValue:V,resetting:w,resetValidators:x,input:A,mask:E,inputType:O}=i;let I=a((()=>!d.value&&E?E.value:d.value)),$=a((()=>!p?.value&&O?O.value:p.value));if(!I?.value)return i;const j=l(null),L=l(h.value),S=l([]),T=l(!1),W=a((()=>"function"==typeof v?v(n):v)),q=a((()=>{let e="function"==typeof I.value?G(I.value):B(I.value);return W.value.definitions&&(e={...e,definitions:F({...W.value.definitions,...e.definitions})}),W.value.blocks&&(e={...e,blocks:F({...W.value.blocks,...e.blocks})}),e.definitions&&(e={...e,definitions:F(e.definitions)}),e.blocks&&(e={...e,blocks:F(e.blocks)}),e})),C=a({get:()=>L.value,set:e=>L.value=e}),D=a((()=>-1!==[void 0,null,""].indexOf(C.value))),B=e=>"string"==typeof e?{mask:H(e)}:e instanceof RegExp?{mask:e}:Array.isArray(e)?e.map(B):e&&"object"==typeof e?R(e):{mask:e},F=e=>Object.keys(e).reduce(((a,l)=>({...a,[l]:B(e[l])})),{}),R=e=>{let a={...e};return"number"===e.mask&&(a.mask=Number),"range"===e.mask&&(a.mask=n.MaskedRange),"enum"===e.mask&&(a.mask=n.MaskedEnum),"date"===e.mask&&(a.mask=Date),void 0!==e.placeholder&&(a.lazy=!a.placeholder),void 0===e.caseInsensitive||e.matchValue||(a.matchValue=J),e.dispatch&&(a.dispatch=(a,l)=>e.dispatch(a,l,b.value,M.value)),Array.isArray(e.mask)&&(a.mask=e.mask.map(B),a.dispatch||(e.mask.some((e=>e.startsWith))&&(a.dispatch=(e,a)=>{const l=(a.value+e).replace(/\D/g,"");return a.compiledMasks.find((e=>Array.isArray(e.startsWith)?e.startsWith.some((e=>0===l.indexOf(e))):0===l.indexOf(e.startsWith)))}),e.element&&(a.dispatch=(a,l)=>{let u=M.value.el$(e.element)?.value;return l.compiledMasks.find((e=>e.when==u||!e.when))}))),e.blocks&&(a.blocks=Object.keys(e.blocks).reduce(((a,l)=>({...a,[l]:B(e.blocks[l])})),{})),a},z=()=>{C.value=j.value.displayValue,c.value||j.value.masked.isComplete?h.value=k.value?j.value.masked.unmaskedValue:j.value.value:h.value=y.value},N=()=>{j.value&&P(),j.value=n(b.value.input,q.value),j.value.on("accept",(()=>{z()})),z(),S.value.map((e=>e())),q.value?.element&&S.value.push(t(a((()=>M.value.el$(q.value.element).value)),(()=>{T.value?T.value=!1:C.value=y.value,U()})))},P=()=>{j.value&&j.value.destroy()},U=()=>{s((()=>{N()}))},G=e=>B(e(n)),H=e=>e.replace(/\\\\/g,"\\"),J=(e,a,l)=>n.MaskedEnum.DEFAULTS.matchValue(e.toLowerCase(),a.toLowerCase(),l),K=()=>"text"===$.value||(console.error(`Input mask only works with type="text" (found at: '${g.value}').`),!1);return u((()=>{K()&&N()})),t($,(e=>{K()})),t(q,((e,a)=>{j.value&&N()}),{deep:!0}),{...i,Mask:j,destroyMask:P,initMask:N,syncMask:z,refreshMask:U,handleInput:()=>{},model:C,load:(e,a=!1)=>{T.value=!0,h.value=y.value;let l=a&&m.value?m.value(e,M.value):e;h.value=l,j.value&&(j.value[k.value?"unmaskedValue":"value"]="number"==typeof l?l.toString():l)},update:e=>{T.value=!0,h.value=y.value,h.value=e,j.value&&(j.value[k.value?"unmaskedValue":"value"]="number"==typeof e?e.toString():e)},clear:()=>{A.value.value="",C.value=y.value,h.value=y.value,N()},reset:()=>{w.value=!0,A.value.value=V.value,C.value=V.value,h.value=V.value,x(),N()},empty:D}}});export{v as default};

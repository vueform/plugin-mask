/*!
 * Vueform Mask Plugin v1.0.7 (https://github.com/vueform/plugin-mask)
 * Copyright (c) 2024-present Adam Berecz <adam@vueform.com>
 * Licensed under the MIT License
 */

import e from"imask";import{toRefs as a,computed as l,ref as u,onMounted as t,watch as s,nextTick as v}from"vue";var n=(e={},n=null)=>({apply:["TextElement","PhoneElement"],props:{mask:{required:!1,type:[String,Object,Array,Function]},unmask:{require:!1,type:Boolean,default:!1},allowIncomplete:{require:!1,type:Boolean,default:!1}},setup(r,i,o){const{formatLoad:m,mask:d,inputType:p,unmask:k,allowIncomplete:c,name:f}=a(r),{nullValue:y,value:h,el$:b,path:g,form$:M,defaultValue:V,resetting:w,resetValidators:x,input:A,mask:O,inputType:E}=o;let S=l((()=>!d.value&&O?O.value:d.value)),I=l((()=>!p?.value&&E?E.value:p.value));if(!S?.value)return o;const $=u(null),j=u(h.value),L=u([]),T=u(!1),W=l((()=>"function"==typeof e?e(n):e)),q=l((()=>{let e="function"==typeof S.value?U(S.value):N(S.value);return W.value.definitions&&(e={...e,definitions:B({...W.value.definitions,...e.definitions})}),W.value.blocks&&(e={...e,blocks:B({...W.value.blocks,...e.blocks})}),e.definitions&&(e={...e,definitions:B(e.definitions)}),e.blocks&&(e={...e,blocks:B(e.blocks)}),e})),C=l({get:()=>j.value,set:e=>j.value=e}),D=l((()=>-1!==[void 0,null,""].indexOf(C.value))),N=e=>"string"==typeof e?{mask:G(e)}:e instanceof RegExp?{mask:e}:Array.isArray(e)?e.map(N):e&&"object"==typeof e?F(e):{mask:e},B=e=>Object.keys(e).reduce(((a,l)=>({...a,[l]:N(e[l])})),{}),F=e=>{let a={...e};return"number"===e.mask&&(a.mask=Number),"range"===e.mask&&(a.mask=n.MaskedRange),"enum"===e.mask&&(a.mask=n.MaskedEnum),"date"===e.mask&&(a.mask=Date),void 0!==e.placeholder&&(a.lazy=!a.placeholder),void 0===e.caseInsensitive||e.matchValue||(a.matchValue=H),e.dispatch&&(a.dispatch=(a,l)=>e.dispatch(a,l,b.value,M.value)),Array.isArray(e.mask)&&(a.mask=e.mask.map(N),a.dispatch||(e.mask.some((e=>e.startsWith))&&(a.dispatch=(e,a)=>{const l=(a.value+e).replace(/\D/g,"");return a.compiledMasks.find((e=>Array.isArray(e.startsWith)?e.startsWith.some((e=>0===l.indexOf(e))):0===l.indexOf(e.startsWith)))}),e.element&&(a.dispatch=(a,l)=>{let u=M.value.el$(e.element)?.value;return l.compiledMasks.find((e=>e.when==u||!e.when))}))),e.blocks&&(a.blocks=Object.keys(e.blocks).reduce(((a,l)=>({...a,[l]:N(e.blocks[l])})),{})),a},J=()=>{C.value=$.value.displayValue,c.value||$.value.masked.isComplete?h.value=k.value?$.value.masked.unmaskedValue:$.value.value:h.value=y.value},R=()=>{$.value&&z(),$.value=n(b.value.input,q.value),$.value.on("accept",(()=>{J()})),b.value.resetting=!0,J(),v((()=>{b.value.resetting=!1})),L.value.map((e=>e())),q.value?.element&&L.value.push(s(l((()=>M.value.el$(q.value.element).value)),(()=>{T.value?T.value=!1:C.value=y.value,P()})))},z=()=>{$.value&&$.value.destroy()},P=()=>{v((()=>{R()}))},U=e=>N(e(n)),G=e=>e.replace(/\\\\/g,"\\"),H=(e,a,l)=>n.MaskedEnum.DEFAULTS.matchValue(e.toLowerCase(),a.toLowerCase(),l),K=()=>"text"===I.value||(console.error(`Input mask only works with type="text" (found at: '${g.value}').`),!1);return t((()=>{K()&&R()})),s(I,(e=>{K()})),s(q,((e,a)=>{$.value&&JSON.stringify(e)!==JSON.stringify(a)&&R()}),{deep:!0}),{...o,Mask:$,destroyMask:z,initMask:R,syncMask:J,refreshMask:P,handleInput:()=>{},model:C,load:(e,a=!1)=>{T.value=!0,h.value=y.value;let l=a&&m.value?m.value(e,M.value):e;h.value=l,$.value&&($.value[k.value?"unmaskedValue":"value"]="number"==typeof l?l.toString():l)},update:e=>{T.value=!0,h.value=y.value,h.value=e,$.value&&($.value[k.value?"unmaskedValue":"value"]="number"==typeof e?e.toString():e)},clear:()=>{A.value.value="",C.value=y.value,h.value=y.value,R()},reset:()=>{w.value=!0,A.value.value=V.value,C.value=V.value,h.value=V.value,x(),R()},empty:D}}}),r=a=>n(a,e);export{r as default};
